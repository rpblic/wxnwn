-- USER Table Create SQL
CREATE TABLE USER
(
    `USER_ID`       INT            NOT NULL    AUTO_INCREMENT COMMENT 'id', 
    `USER_EMAIL`    VARCHAR(45)    NULL        COMMENT 'email', 
    `JOINED_TIME`   DATETIME       NOT NULL    COMMENT 'joinedTime', 
    `VISITED_TIME`  DATETIME       NOT NULL    COMMENT 'visitedTime', 
    PRIMARY KEY (USER_ID)
);

ALTER TABLE USER COMMENT 'USER';


-- VIDEO_CONTENT Table Create SQL
CREATE TABLE VIDEO_CONTENT
(
    `CONTENT_ID`  INT    NOT NULL    COMMENT 'id', 
    `CONTENT`     TEXT    NOT NULL    COMMENT 'contents', 
    PRIMARY KEY (CONTENT_ID)
);

ALTER TABLE VIDEO_CONTENT COMMENT 'VIDEO_CONTENT';


-- VIDEO_METADATA Table Create SQL
CREATE TABLE VIDEO_METADATA
(
    `VIDEO_ID`           INT            NOT NULL    AUTO_INCREMENT COMMENT 'id', 
    `TITLE`              VARCHAR(45)    NOT NULL    COMMENT 'title', 
    `CONTENT_ID`         INT            NOT NULL    COMMENT 'contentId', 
    `DESCRIPTION`        VARCHAR(45)    NULL        COMMENT 'description', 
    `VIDEO_TRAFFIC`      INT            NOT NULL    COMMENT 'traffic', 
    `VIDEO_TREND_SCORE`  INT            NOT NULL    COMMENT 'videoTrendScore', 
    `UPLODED_TIME`       DATETIME       NOT NULL    COMMENT 'uplodedTime', 
    `UPDATED_TIME`       DATETIME       NOT NULL    COMMENT 'updatedTime', 
    PRIMARY KEY (VIDEO_ID)
);

ALTER TABLE VIDEO_METADATA COMMENT 'VIDEO_METADATA';

ALTER TABLE VIDEO_METADATA ADD CONSTRAINT FK_VIDEO_METADATA_CONTENT_ID_VIDEO_CONTENT_CONTENT_ID FOREIGN KEY (CONTENT_ID)
 REFERENCES VIDEO_CONTENT (CONTENT_ID)  ON DELETE RESTRICT ON UPDATE RESTRICT;


-- TAG Table Create SQL
CREATE TABLE TAG
(
    `TAG_ID`           INT            NOT NULL    AUTO_INCREMENT COMMENT 'id', 
    `TAG_NAME`         VARCHAR(45)    NOT NULL    COMMENT 'tagName', 
    `TAG_TREND_SCORE`  INT            NOT NULL    COMMENT 'tagTrendScore', 
    `ADDED_TIME`       DATETIME       NOT NULL    COMMENT 'addedTime', 
    PRIMARY KEY (TAG_ID)
);

ALTER TABLE TAG COMMENT 'TAG';


-- COMMENTARY Table Create SQL
CREATE TABLE COMMENTARY
(
    `COMMENTARY_ID`  INT         NOT NULL    AUTO_INCREMENT COMMENT 'id', 
    `VIDEO_ID`       INT         NOT NULL    COMMENT 'videoId', 
    `CONTENTS`       TEXT        NOT NULL    COMMENT 'contents', 
    `UPLODED_TIME`   DATETIME    NOT NULL    COMMENT 'uploded_time', 
    `UPDATED_TIME`   DATETIME    NOT NULL    COMMENT 'updated_time', 
    PRIMARY KEY (COMMENTARY_ID)
);

ALTER TABLE COMMENTARY COMMENT 'COMMENTARY';

ALTER TABLE COMMENTARY ADD CONSTRAINT FK_COMMENTARY_VIDEO_ID_VIDEO_METADATA_VIDEO_ID FOREIGN KEY (VIDEO_ID)
 REFERENCES VIDEO_METADATA (VIDEO_ID)  ON DELETE RESTRICT ON UPDATE RESTRICT;


-- STORYLINE Table Create SQL
CREATE TABLE STORYLINE
(
    `TAG_ID`       INT    NOT NULL    COMMENT 'tagId', 
    `STORY_QUEUE`  TEXT    NOT NULL    COMMENT 'storyqueue', 
    PRIMARY KEY (TAG_ID)
);

ALTER TABLE STORYLINE COMMENT 'STORYLINE';

ALTER TABLE STORYLINE ADD CONSTRAINT FK_STORYLINE_TAG_ID_TAG_TAG_ID FOREIGN KEY (TAG_ID)
 REFERENCES TAG (TAG_ID)  ON DELETE RESTRICT ON UPDATE RESTRICT;


-- STACK Table Create SQL
CREATE TABLE STACK
(
    `USER_ID`               INT    NOT NULL    COMMENT 'userId', 
    `STACK_QUEUE`           TEXT    NOT NULL    COMMENT 'stackQueue', 
    `STACKED_TIME_QUEUE`    TEXT    NOT NULL    COMMENT 'stackedTimeQueue', 
    `STACK_COLOR_QUEUE`     TEXT    NOT NULL    COMMENT 'stackColorQueue', 
    `STACK_ACTIVITY_SCORE`  TEXT    NOT NULL    COMMENT 'stackActivityScore', 
    PRIMARY KEY (USER_ID)
);

ALTER TABLE STACK COMMENT 'STACK';

ALTER TABLE STACK ADD CONSTRAINT FK_STACK_USER_ID_USER_USER_ID FOREIGN KEY (USER_ID)
 REFERENCES USER (USER_ID)  ON DELETE RESTRICT ON UPDATE RESTRICT;


-- POPULARITY Table Create SQL
CREATE TABLE POPULARITY
(
    `USER_ID`           INT    NOT NULL    COMMENT 'userId', 
    `TAG_ID`            INT    NOT NULL    COMMENT 'tagId', 
    `POPULARITY_SCORE`  INT    NOT NULL    COMMENT 'popularityScore', 
    PRIMARY KEY (USER_ID, TAG_ID)
);

ALTER TABLE POPULARITY COMMENT 'POPULARITY';

ALTER TABLE POPULARITY ADD CONSTRAINT FK_POPULARITY_USER_ID_USER_USER_ID FOREIGN KEY (USER_ID)
 REFERENCES USER (USER_ID)  ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE POPULARITY ADD CONSTRAINT FK_POPULARITY_TAG_ID_TAG_TAG_ID FOREIGN KEY (TAG_ID)
 REFERENCES TAG (TAG_ID)  ON DELETE RESTRICT ON UPDATE RESTRICT;


-- AUTHORIZATION Table Create SQL
CREATE TABLE AUTHORIZATION
(
    `USER_ID`                 INT         NOT NULL    COMMENT 'userId', 
    `TAG_ID`                  INT         NOT NULL    COMMENT 'tagId', 
    `AUTHORIZED_TIME`         DATETIME    NOT NULL    COMMENT 'authorizedTime', 
    `AUTHORIZATION_DUE_TIME`  DATETIME    NOT NULL    COMMENT 'authorizationDueTime', 
    PRIMARY KEY (USER_ID, TAG_ID)
);

ALTER TABLE AUTHORIZATION COMMENT 'AUTHORIZATION';

ALTER TABLE AUTHORIZATION ADD CONSTRAINT FK_AUTHORIZATION_USER_ID_USER_USER_ID FOREIGN KEY (USER_ID)
 REFERENCES USER (USER_ID)  ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE AUTHORIZATION ADD CONSTRAINT FK_AUTHORIZATION_TAG_ID_TAG_TAG_ID FOREIGN KEY (TAG_ID)
 REFERENCES TAG (TAG_ID)  ON DELETE RESTRICT ON UPDATE RESTRICT;


-- LIKE_REACTION Table Create SQL
CREATE TABLE LIKE_REACTION
(
    `USER_ID`     INT         NOT NULL    COMMENT 'userId', 
    `VIDEO_ID`    INT         NOT NULL    COMMENT 'videoId', 
    `LIKED_TIME`  DATETIME    NOT NULL    COMMENT 'likedTime', 
    PRIMARY KEY (USER_ID, VIDEO_ID)
);

ALTER TABLE LIKE_REACTION COMMENT 'LIKE_REACTION';

ALTER TABLE LIKE_REACTION ADD CONSTRAINT FK_LIKE_REACTION_VIDEO_ID_VIDEO_METADATA_VIDEO_ID FOREIGN KEY (VIDEO_ID)
 REFERENCES VIDEO_METADATA (VIDEO_ID)  ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE LIKE_REACTION ADD CONSTRAINT FK_LIKE_REACTION_USER_ID_USER_USER_ID FOREIGN KEY (USER_ID)
 REFERENCES USER (USER_ID)  ON DELETE RESTRICT ON UPDATE RESTRICT;


-- DOWNVOTE_REACTION Table Create SQL
CREATE TABLE DOWNVOTE_REACTION
(
    `USER_ID`         INT         NOT NULL    COMMENT 'userId', 
    `VIDEO_ID`        INT         NOT NULL    COMMENT 'videoId', 
    `DOWNVOTED_TIME`  DATETIME    NOT NULL    COMMENT 'downvotedTime', 
    PRIMARY KEY (USER_ID, VIDEO_ID)
);

ALTER TABLE DOWNVOTE_REACTION COMMENT 'DOWNVOTE_REACTION';

ALTER TABLE DOWNVOTE_REACTION ADD CONSTRAINT FK_DOWNVOTE_REACTION_VIDEO_ID_VIDEO_METADATA_VIDEO_ID FOREIGN KEY (VIDEO_ID)
 REFERENCES VIDEO_METADATA (VIDEO_ID)  ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE DOWNVOTE_REACTION ADD CONSTRAINT FK_DOWNVOTE_REACTION_USER_ID_USER_USER_ID FOREIGN KEY (USER_ID)
 REFERENCES USER (USER_ID)  ON DELETE RESTRICT ON UPDATE RESTRICT;


-- BID Table Create SQL
CREATE TABLE BID
(
    `USER_ID`     INT            NOT NULL    COMMENT 'userId', 
    `VIDEO_ID`    INT            NOT NULL    COMMENT 'videoId', 
    `BID_AMOUNT`  VARCHAR(45)    NOT NULL    COMMENT 'amount', 
    `BIDED_TIME`  VARCHAR(45)    NOT NULL    COMMENT 'bided_time', 
    PRIMARY KEY (USER_ID, VIDEO_ID)
);

ALTER TABLE BID COMMENT 'BID';

ALTER TABLE BID ADD CONSTRAINT FK_BID_USER_ID_USER_USER_ID FOREIGN KEY (USER_ID)
 REFERENCES USER (USER_ID)  ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE BID ADD CONSTRAINT FK_BID_VIDEO_ID_VIDEO_METADATA_VIDEO_ID FOREIGN KEY (VIDEO_ID)
 REFERENCES VIDEO_METADATA (VIDEO_ID)  ON DELETE RESTRICT ON UPDATE RESTRICT;


-- TAG_BOOKMARK Table Create SQL
CREATE TABLE TAG_BOOKMARK
(
    `USER_ID`          INT         NOT NULL    COMMENT 'userId', 
    `TAG_ID`           INT         NOT NULL    COMMENT 'tagId', 
    `BOOKMARKED_TIME`  DATETIME    NOT NULL    COMMENT 'bookmarkedTime', 
    PRIMARY KEY (USER_ID, TAG_ID)
);

ALTER TABLE TAG_BOOKMARK COMMENT 'TAG_BOOKMARK';

ALTER TABLE TAG_BOOKMARK ADD CONSTRAINT FK_TAG_BOOKMARK_USER_ID_USER_USER_ID FOREIGN KEY (USER_ID)
 REFERENCES USER (USER_ID)  ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE TAG_BOOKMARK ADD CONSTRAINT FK_TAG_BOOKMARK_TAG_ID_TAG_TAG_ID FOREIGN KEY (TAG_ID)
 REFERENCES TAG (TAG_ID)  ON DELETE RESTRICT ON UPDATE RESTRICT;


-- VIDEO_BOOKMARK Table Create SQL
CREATE TABLE VIDEO_BOOKMARK
(
    `USER_ID`          INT         NOT NULL    COMMENT 'userId', 
    `VIDEO_ID`         INT         NOT NULL    COMMENT 'videoId', 
    `BOOKMARKED_TIME`  DATETIME    NOT NULL    COMMENT 'bookmarkedTime', 
    PRIMARY KEY (USER_ID, VIDEO_ID)
);

ALTER TABLE VIDEO_BOOKMARK COMMENT 'VIDEO_BOOKMARK';

ALTER TABLE VIDEO_BOOKMARK ADD CONSTRAINT FK_VIDEO_BOOKMARK_VIDEO_ID_VIDEO_METADATA_VIDEO_ID FOREIGN KEY (VIDEO_ID)
 REFERENCES VIDEO_METADATA (VIDEO_ID)  ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE VIDEO_BOOKMARK ADD CONSTRAINT FK_VIDEO_BOOKMARK_USER_ID_USER_USER_ID FOREIGN KEY (USER_ID)
 REFERENCES USER (USER_ID)  ON DELETE RESTRICT ON UPDATE RESTRICT;


-- USER_BOOKMARK Table Create SQL
CREATE TABLE USER_BOOKMARK
(
    `USER_ID`             INT         NOT NULL    COMMENT 'userId', 
    `BOOKMARKED_USER_ID`  INT         NOT NULL    COMMENT 'bookmarkedUserId', 
    `BOOKMARKED_TIME`     DATETIME    NOT NULL    COMMENT 'bookmarkedTime', 
    PRIMARY KEY (USER_ID, BOOKMARKED_USER_ID)
);

ALTER TABLE USER_BOOKMARK COMMENT 'USER_BOOKMARK';

ALTER TABLE USER_BOOKMARK ADD CONSTRAINT FK_USER_BOOKMARK_USER_ID_USER_USER_ID FOREIGN KEY (USER_ID)
 REFERENCES USER (USER_ID)  ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE USER_BOOKMARK ADD CONSTRAINT FK_USER_BOOKMARK_BOOKMARKED_USER_ID_USER_USER_ID FOREIGN KEY (BOOKMARKED_USER_ID)
 REFERENCES USER (USER_ID)  ON DELETE RESTRICT ON UPDATE RESTRICT;


-- REACT Table Create SQL
CREATE TABLE REACT
(
    `VIDEO_ID`          INT    NOT NULL    COMMENT 'videoId', 
    `REACTED_VIDEO_ID`  INT    NOT NULL    COMMENT 'reactedVideoId', 
    PRIMARY KEY (VIDEO_ID, REACTED_VIDEO_ID)
);

ALTER TABLE REACT COMMENT 'REACT';

ALTER TABLE REACT ADD CONSTRAINT FK_REACT_VIDEO_ID_VIDEO_METADATA_VIDEO_ID FOREIGN KEY (VIDEO_ID)
 REFERENCES VIDEO_METADATA (VIDEO_ID)  ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE REACT ADD CONSTRAINT FK_REACT_REACTED_VIDEO_ID_VIDEO_METADATA_VIDEO_ID FOREIGN KEY (REACTED_VIDEO_ID)
 REFERENCES VIDEO_METADATA (VIDEO_ID)  ON DELETE RESTRICT ON UPDATE RESTRICT;


-- USER_VIEW_HISTORY Table Create SQL
CREATE TABLE USER_VIEW_HISTORY
(
    `USER_ID`      INT         NOT NULL    COMMENT 'userId', 
    `TAG_ID`       INT         NOT NULL    COMMENT 'tagId', 
    `VIDEO_ID`     INT         NOT NULL    COMMENT 'videoId', 
    `VIEWED_TIME`  DATETIME    NOT NULL    COMMENT 'viewedTime', 
    PRIMARY KEY (USER_ID, TAG_ID, VIDEO_ID)
);

ALTER TABLE USER_VIEW_HISTORY COMMENT 'USER_VIEW_HISTORY';

ALTER TABLE USER_VIEW_HISTORY ADD CONSTRAINT FK_USER_VIEW_HISTORY_USER_ID_USER_USER_ID FOREIGN KEY (USER_ID)
 REFERENCES USER (USER_ID)  ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE USER_VIEW_HISTORY ADD CONSTRAINT FK_USER_VIEW_HISTORY_TAG_ID_TAG_TAG_ID FOREIGN KEY (TAG_ID)
 REFERENCES TAG (TAG_ID)  ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE USER_VIEW_HISTORY ADD CONSTRAINT FK_USER_VIEW_HISTORY_VIDEO_ID_VIDEO_METADATA_VIDEO_ID FOREIGN KEY (VIDEO_ID)
 REFERENCES VIDEO_METADATA (VIDEO_ID)  ON DELETE RESTRICT ON UPDATE RESTRICT;

